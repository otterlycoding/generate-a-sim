{"version":3,"sources":["components/Sims/Sim/Sim.js","components/Sims/Sims.js","components/Options/Options.js","containers/GenerateASim/GenerateASim.js","App.js","serviceWorker.js","index.js"],"names":["sim","props","genderPref","simology","className","gender","aspiration","skin","hair","eyes","personality","join","sims","generatedSims","map","i","push","Sim","key","options","expandedClass","expanded","htmlFor","id","type","min","max","value","numOfSims","onChange","changeNum","onClick","click","aria-expanded","aria-controls","aria-labelledby","toggleGenderPref","toggleSecAspirations","toggleGrilledCheese","disabled","disableGCToggle","GENDER","HAIR","SKIN","EYES","ASPIRATIONS","GENDER_PREF","PERSONALITY_MAX","GenerateASim","state","simsToGenerate","expandedAdvancedOptions","noGrilledCheese","noGenderPref","noSecAspirations","getRandomInRange","Math","ceil","floor","random","randomizeGenetics","randomizePersonality","currentSum","points","currentPoints","index","length","j","randomizeAspirations","secondary","createRandomSim","console","log","generateSims","setState","openAdvancedOptions","setNumberOfSims","event","number","target","setGrilledCheese","setGenderPref","setSecAspirations","Options","this","Sims","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1a71a0db.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst sim = (props) => {\r\n\tvar genderPref = null;\r\n\tif(props.simology.genderPref){\r\n\t\tgenderPref = <p>{props.simology.genderPref}</p>;\r\n\t}\r\n\treturn(\r\n\t\t<div className=\"col-12 col-sm-6 col-md-3 mb-5\">\r\n\t\t\t<p>{props.simology.gender}</p>\r\n\t\t\t<p>{props.simology.aspiration}</p>\r\n\t\t\t<p>{props.simology.skin}</p>\r\n\t\t\t<p>{props.simology.hair}</p>\r\n\t\t\t<p>{props.simology.eyes}</p>\r\n\t\t\t<p>{props.simology.personality.join('/')}</p>\r\n\t\t\t{genderPref}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default sim;","import React from 'react';\r\nimport Sim from './Sim/Sim';\r\n\r\nconst sims = (props) => {\r\n\tvar sims = [];\r\n\tif(props.generatedSims){\r\n\t\tprops.generatedSims.map((sim,i) => {\r\n\t\t\treturn(sims.push(<Sim key={i} simology={sim} />));\r\n\t\t})\r\n\t}\r\n\treturn(\r\n\t\t<div className=\"row\">\r\n\t\t\t{sims}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default sims;","import React from 'react';\r\n\r\nconst options = (props) => {\r\n\tvar expandedClass = props.expanded ? \"collapse show\" : \"collapse\";\r\n\t\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<div className=\"form-group row\">\r\n\t\t\t\t<div className=\"col-auto\">\r\n\t\t\t\t\t<label className=\"col-form-label\" htmlFor=\"numberOfSims\">Sims to Generate</label>\r\n\t\t\t\t\t<input id=\"numberOfSims\" className=\"form-control\" type=\"number\" min=\"1\" max=\"8\" value={props.numOfSims} onChange={props.changeNum}/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div id=\"accordionOptions\">\r\n\t\t\t\t<div className=\"card\">\r\n\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t<h2 className=\"mb-2\" id=\"accordionHeader\">\r\n\t\t\t\t\t\t\t<button className=\"btn btn-link\" type=\"button\" onClick={props.click} aria-expanded={props.expanded} aria-controls=\"advancedOptions\">Advanced Options</button>\r\n\t\t\t\t\t\t</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div id=\"advancedOptions\" className={expandedClass} aria-labelledby=\"accordionHeader\">\r\n\t\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t\t<div className=\"form-check\">\r\n\t\t\t\t\t\t\t\t<input id=\"genderPrefToggle\" className=\"form-check-input\" type=\"checkbox\" onChange={props.toggleGenderPref}/>\r\n\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"genderPrefToggle\">Gender Preference</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-check\">\r\n\t\t\t\t\t\t\t\t<input id=\"secAspirationToggle\" className=\"form-check-input\" type=\"checkbox\" onChange={props.toggleSecAspirations}/>\r\n\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"secAspirationToggle\">Secondary Aspirations</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"form-check\">\r\n\t\t\t\t\t\t\t\t<input id=\"grilledCheeseToggle\" className=\"form-check-input\" type=\"checkbox\" onChange={props.toggleGrilledCheese} disabled={props.disableGCToggle}/>\r\n\t\t\t\t\t\t\t\t<label className=\"form-check-label\" htmlFor=\"grilledCheeseToggle\">Grilled Cheese Sims</label>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default options;","import React, {Component,Fragment} from 'react';\r\nimport Sims from '../../components/Sims/Sims';\r\nimport Options from '../../components/Options/Options';\r\n\r\nconst GENDER = [\"male\",\"female\"];\r\nconst HAIR = [\"red\",\"blonde\",\"brown\",\"black\"];\r\nconst SKIN = [\"light\",\"tan\",\"medium\",\"dark\"];\r\nconst EYES = [\"grey\",\"light blue\",\"green\",\"dark blue\",\"brown\"];\r\nconst ASPIRATIONS = [\"family\",\"fortune\",\"romance\",\"pleasure\",\"knowledge\",\"grilled-cheese\"];\r\nconst GENDER_PREF = [\"straight\",\"gay\",\"bisexual\"];\r\nconst PERSONALITY_MAX = 25;\r\n\r\nclass GenerateASim extends Component {\r\n\tstate = {\r\n\t\tsimsToGenerate: 1,\r\n\t\tgeneratedSims: null,\r\n\t\texpandedAdvancedOptions: false,\r\n\t\tnoGrilledCheese: true,\r\n\t\tnoGenderPref: true,\r\n\t\tnoSecAspirations: true\r\n\t}\r\n\r\n\tgetRandomInRange = (min,max) => {\r\n\t\tmin = Math.ceil(min);\r\n\t\tmax = Math.ceil(max);\r\n\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n\t}\r\n\t\r\n\trandomizeGenetics = () => {\r\n\t\tvar gender = GENDER[this.getRandomInRange(0,1)];\r\n\t\tvar hair = HAIR[this.getRandomInRange(0,3)];\r\n\t\tvar skin = SKIN[this.getRandomInRange(0,3)];\r\n\t\tvar eyes = EYES[this.getRandomInRange(0,4)];\r\n\t\treturn {gender,hair,skin,eyes};\r\n\t}\r\n\t\r\n\trandomizePersonality = () => {\r\n\t\tvar personality = [0,0,0,0,0];\r\n\t\tvar currentSum = 0;\r\n\t\tvar i = 0;\r\n\t\t\r\n\t\t//Randomly assign points until the sum of all points equals the maximum\r\n\t\twhile (currentSum !== PERSONALITY_MAX){\r\n\t\t\tlet points = this.getRandomInRange(0,10);\r\n\t\t\tlet currentPoints = personality[i];\r\n\t\t\t\r\n\t\t\tif((currentSum - currentPoints + points) <= PERSONALITY_MAX){\r\n\t\t\t\tpersonality[i] = points;\r\n\t\t\t\tcurrentSum = currentSum - currentPoints + points;\r\n\t\t\t\ti = (i+1) % 5;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//Shuffle personality array\r\n\t\tfor (let index = personality.length - 1; i > 0; i--) {\r\n\t\t\tconst j = Math.floor(Math.random() * (index + 1));\r\n\t\t\t[personality[index], personality[j]] = [personality[j], personality[index]];\r\n\t\t}\r\n\t\t\r\n\t\treturn(personality);\r\n\t}\r\n\t\r\n\trandomizeAspirations = () => {\r\n\t\tvar aspiration = ASPIRATIONS[this.getRandomInRange(0,4)];\r\n\r\n\t\tif(!this.state.noSecAspirations){\r\n\t\t\tvar secondary = null;\r\n\t\t\twhile(secondary === aspiration || !secondary){\r\n\t\t\t\tsecondary = this.state.noGrilledCheese ? ASPIRATIONS[this.getRandomInRange(0,4)] : ASPIRATIONS[this.getRandomInRange(0,5)];\r\n\t\t\t}\r\n\t\t\taspiration = [aspiration];\r\n\t\t\taspiration.push(secondary);\r\n\t\t\taspiration = aspiration.join('/');\r\n\t\t}\r\n\t\t\r\n\t\treturn aspiration;\r\n\t}\r\n\t\r\n\tcreateRandomSim = () => {\r\n\t\tvar {gender,hair,skin,eyes} = this.randomizeGenetics();\r\n\t\tvar personality = this.randomizePersonality();\r\n\t\tvar aspiration = this.randomizeAspirations();\r\n\t\tvar genderPref = this.state.noGenderPref ? null : GENDER_PREF[this.getRandomInRange(0,2)];\r\n\t\tvar sim = {gender,hair,skin,eyes,personality,aspiration,genderPref};\r\n\t\tconsole.log(sim);\r\n\t\treturn sim;\r\n\t}\r\n\t\r\n\tgenerateSims = () => {\r\n\t\tvar sims = [];\r\n\t\t\r\n\t\t//For number of sims input, create sims to generate\r\n\t\tfor(let i = 0; i < this.state.simsToGenerate; i++){\r\n\t\t\tsims.push(this.createRandomSim());\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(sims);\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tgeneratedSims: sims\r\n\t\t});\r\n\t}\r\n\t\r\n\topenAdvancedOptions = () => {\r\n\t\tthis.setState({\r\n\t\t\texpandedAdvancedOptions: !this.state.expandedAdvancedOptions\r\n\t\t});\r\n\t}\r\n\t\r\n\tsetNumberOfSims = (event) => {\r\n\t\tvar number = event.target.value;\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tsimsToGenerate: number\r\n\t\t});\r\n\t}\r\n\t\r\n\tsetGrilledCheese = () => {\r\n\t\tconsole.log(\"Called\");\r\n\t\tthis.setState({\r\n\t\t\tnoGrilledCheese: !this.state.noGrilledCheese\r\n\t\t});\r\n\t}\r\n\t\r\n\tsetGenderPref = () => {\r\n\t\tconsole.log(\"Called\");\r\n\t\tthis.setState({\r\n\t\t\tnoGenderPref: !this.state.noGenderPref\r\n\t\t});\r\n\t}\r\n\t\r\n\tsetSecAspirations = () => {\r\n\t\tconsole.log(\"Called\");\r\n\t\tthis.setState({\r\n\t\t\tnoSecAspirations: !this.state.noSecAspirations\r\n\t\t});\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Fragment>\r\n\t\t\t<Options numOfSims={this.state.simsToGenerate} \r\n\t\t\t\tchangeNum={(event) => this.setNumberOfSims(event)} \r\n\t\t\t\ttoggleGrilledCheese={(event) => this.setGrilledCheese()} \r\n\t\t\t\tdisableGCToggle={this.state.noSecAspirations}\r\n\t\t\t\ttoggleGenderPref={(event) => this.setGenderPref()}\r\n\t\t\t\ttoggleSecAspirations={(event) => this.setSecAspirations()}\r\n\t\t\t\tclick={(event) => this.openAdvancedOptions()}\r\n\t\t\t\texpanded={this.state.expandedAdvancedOptions}/>\r\n\t\t\t<button className=\"btn btn-primary\" onClick={() => this.generateSims()}>Randomize</button>\r\n\t\t\t<Sims generatedSims = {this.state.generatedSims}/>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\t\t\t   \r\nexport default GenerateASim;","import React, {Component,Fragment} from 'react';\r\nimport GenerateASim from './containers/GenerateASim/GenerateASim';\r\n\r\nclass App extends Component {\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Fragment>\r\n\t\t\t\t<header className=\"container\">\r\n\t\t\t\t\t<h1>Generate-A-Sim</h1>\r\n\t\t\t\t</header>\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<GenerateASim />\r\n\t\t\t\t</div>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}