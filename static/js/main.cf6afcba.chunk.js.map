{"version":3,"sources":["components/Sims/Sim/Sim.js","components/Sims/Sims.js","containers/GenerateASim/GenerateASim.js","components/Options/Options.js","App.js","serviceWorker.js","index.js"],"names":["sim","props","genderPref","simology","scope","turnOns","turnOff","join","className","number","class","gender","aspiration","skin","hair","eyes","personality","sims","generatedSims","map","i","push","Sim","key","GENDER","HAIR","SKIN","EYES","ASPIRATIONS","GENDER_PREF","TURNONS","PERSONALITY_MAX","GenerateASim","state","simsToGenerate","getRandomInRange","min","max","Math","ceil","floor","random","randomizeGenetics","randomizePersonality","currentSum","points","currentPoints","index","length","j","randomizeAspirations","noSecAspirations","secondary","noGrilledCheese","randomizeAttraction","attractions","current","splice","createRandomSim","noGenderPref","noAttraction","generateSims","setState","setNumberOfSims","event","target","value","htmlFor","id","type","this","onChange","onClick","Sims","Component","options","show","toggleGenderPref","toggleSecAspirations","toggleGrilledCheese","disabled","disableGCToggle","toggleAttraction","App","expandedAdvancedOptions","openAdvancedOptions","setGrilledCheese","setGenderPref","setSecAspirations","setAttraction","overlay","Options","href","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cf6afcba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst sim = (props) => {\r\n\tvar genderPref = null;\r\n\tif(props.simology.genderPref){\r\n\t\tgenderPref = <tr><th scope=\"col\">Gender Preference</th><td>{props.simology.genderPref}</td></tr>;\r\n\t}\r\n\tvar turnOns = null;\r\n\tvar turnOff = null;\r\n\tif(props.simology.turnOns && props.simology.turnOff){\r\n\t\tturnOns = <tr><th scope=\"col\">Turn Ons</th><td>{props.simology.turnOns.join(\" & \")}</td></tr>;\r\n\t\tturnOff = <tr><th scope=\"col\">Turn Offs</th><td>{props.simology.turnOff}</td></tr>;\r\n\t}\r\n\treturn(\r\n\t\t<div className=\"col-12 col-md-6 col-lg-4 mb-5\">\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<h5 className=\"card-title text-center\">{\"Sim #\" + props.number}</h5>\r\n\t\t\t\t\t<div class=\"table-responsive\">\r\n\t\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Gender</th>\r\n\t\t\t\t\t\t\t\t\t<td>{props.simology.gender}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Aspiration</th>\r\n\t\t\t\t\t\t\t\t\t<td>{props.simology.aspiration}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Skin</th>\r\n\t\t\t\t\t\t\t\t\t<td>{props.simology.skin}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Hair</th>\r\n\t\t\t\t\t\t\t\t\t<td>{props.simology.hair}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Eyes</th>\r\n\t\t\t\t\t\t\t\t\t<td>{props.simology.eyes}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th scope=\"col\">Personality</th>\r\n\t\t\t\t\t\t\t\t\t<td>{props.simology.personality.join('/')}</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t{genderPref}\r\n\t\t\t\t\t\t\t\t{turnOns}\r\n\t\t\t\t\t\t\t\t{turnOff}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default sim;","import React from 'react';\r\nimport Sim from './Sim/Sim';\r\n\r\nconst sims = (props) => {\r\n\tvar sims = [];\r\n\tif(props.generatedSims){\r\n\t\tprops.generatedSims.map((sim,i) => {\r\n\t\t\treturn(sims.push(<Sim key={i} simology={sim} number={i+1}/>));\r\n\t\t})\r\n\t}\r\n\treturn(\r\n\t\t<div className=\"row\">\r\n\t\t\t{sims}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default sims;","import React, {Component,Fragment} from 'react';\r\nimport Sims from '../../components/Sims/Sims';\r\n\r\nconst GENDER = [\"Male\",\"Female\"];\r\nconst HAIR = [\"Red\",\"Blonde\",\"Brown\",\"Black\"];\r\nconst SKIN = [\"Light (S1)\",\"Tan (S2)\",\"Medium (S3)\",\"Dark (S4)\"];\r\nconst EYES = [\"Grey\",\"Light Blue\",\"Green\",\"Dark Blue\",\"Brown\"];\r\nconst ASPIRATIONS = [\"Family\",\"Fortune\",\"Romance\",\"Pleasure\",\"Knowledge\",\"Grilled-Cheese\"];\r\nconst GENDER_PREF = [\"Straight\",\"Gay\",\"Bisexual\"];\r\nconst TURNONS = [\"Black Hair\",\"Blonde Hair\",\"Brown Hair\",\"Red Hair\",\"Grey Hair\",\"Custom Hair\",\"Facial Hair\",\"Swimwear\",\"Underwear\",\"Formal Wear\",\"Glasses\",\"Hats\",\"Jewelry\",\"Makeup\",\"Full Face Makeup\",\"Fat\",\"Fit\",\"Cologne\",\"Stink\",\"Vampirism\",\"Lycanthropy\",\"Plantsimism\",\"Zombiism\",\"Robots\",\"Witchiness\",\"Cooking\",\"Cleaning\",\"Creativity\",\"Body\",\"Logic\",\"Charisma\",\"Mechanical\",\"Unemployed\",\"Hard Worker\"];\r\nconst PERSONALITY_MAX = 25;\r\n\r\nclass GenerateASim extends Component {\r\n\tstate = {\r\n\t\tsimsToGenerate: 1,\r\n\t\tgeneratedSims: null\r\n\t}\r\n\r\n\tgetRandomInRange = (min,max) => {\r\n\t\tmin = Math.ceil(min);\r\n\t\tmax = Math.ceil(max);\r\n\t\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n\t}\r\n\t\r\n\trandomizeGenetics = () => {\r\n\t\tvar gender = GENDER[this.getRandomInRange(0,1)];\r\n\t\tvar hair = HAIR[this.getRandomInRange(0,3)];\r\n\t\tvar skin = SKIN[this.getRandomInRange(0,3)];\r\n\t\tvar eyes = EYES[this.getRandomInRange(0,4)];\r\n\t\treturn {gender,hair,skin,eyes};\r\n\t}\r\n\t\r\n\trandomizePersonality = () => {\r\n\t\tvar personality = [0,0,0,0,0];\r\n\t\tvar currentSum = 0;\r\n\t\tvar i = 0;\r\n\t\t\r\n\t\t//Randomly assign points until the sum of all points equals the maximum\r\n\t\twhile (currentSum !== PERSONALITY_MAX){\r\n\t\t\tlet points = this.getRandomInRange(0,10);\r\n\t\t\tlet currentPoints = personality[i];\r\n\t\t\t\r\n\t\t\tif((currentSum - currentPoints + points) <= PERSONALITY_MAX){\r\n\t\t\t\tpersonality[i] = points;\r\n\t\t\t\tcurrentSum = currentSum - currentPoints + points;\r\n\t\t\t\ti = (i+1) % 5;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//Shuffle personality array\r\n\t\tfor (let index = personality.length - 1; i > 0; i--) {\r\n\t\t\tconst j = Math.floor(Math.random() * (index + 1));\r\n\t\t\t[personality[index], personality[j]] = [personality[j], personality[index]];\r\n\t\t}\r\n\t\t\r\n\t\treturn(personality);\r\n\t}\r\n\t\r\n\trandomizeAspirations = () => {\r\n\t\tvar aspiration = ASPIRATIONS[this.getRandomInRange(0,4)];\r\n\r\n\t\tif(!this.props.noSecAspirations){\r\n\t\t\tvar secondary = null;\r\n\t\t\twhile(secondary === aspiration || !secondary){\r\n\t\t\t\tsecondary = this.props.noGrilledCheese ? ASPIRATIONS[this.getRandomInRange(0,4)] : ASPIRATIONS[this.getRandomInRange(0,5)];\r\n\t\t\t}\r\n\t\t\taspiration = [aspiration];\r\n\t\t\taspiration.push(secondary);\r\n\t\t\taspiration = aspiration.join('/');\r\n\t\t}\r\n\t\t\r\n\t\treturn aspiration;\r\n\t}\r\n\t\r\n\trandomizeAttraction = () => {\r\n\t\tvar attractions = [...TURNONS];\r\n\t\tvar turnOns = [];\r\n\t\tvar current = null;\r\n\r\n\t\t\r\n\t\tfor(let i = 0; i < 2; i++){\r\n\t\t\tcurrent = attractions.splice(this.getRandomInRange(0,attractions.length - 1),1);\r\n\t\t\tturnOns.push(current[0]);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tvar turnOff = attractions.splice(this.getRandomInRange(0,attractions.length-1),1);\r\n\t\treturn {turnOns, turnOff};\t\r\n\t}\r\n\t\r\n\tcreateRandomSim = () => {\t\t\r\n\t\tvar {gender,hair,skin,eyes} = this.randomizeGenetics();\r\n\t\tvar personality = this.randomizePersonality();\r\n\t\tvar aspiration = this.randomizeAspirations();\r\n\t\tvar genderPref = this.props.noGenderPref ? null : GENDER_PREF[this.getRandomInRange(0,2)];\r\n\r\n\t\tif(!this.props.noAttraction){\r\n\t\t\tvar {turnOns, turnOff} = this.props.noAttraction ? null : this.randomizeAttraction();\r\n\t\t}\r\n\t\t\r\n\t\tvar sim = {gender,hair,skin,eyes,personality,aspiration,genderPref,turnOns,turnOff};\r\n\t\treturn sim;\r\n\t}\r\n\t\r\n\tgenerateSims = () => {\r\n\t\tvar sims = [];\r\n\t\t\r\n\t\t//For number of sims input, create sims to generate\r\n\t\tfor(let i = 0; i < this.state.simsToGenerate; i++){\r\n\t\t\tsims.push(this.createRandomSim());\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tgeneratedSims: sims\r\n\t\t});\r\n\t}\r\n\t\r\n\tsetNumberOfSims = (event) => {\r\n\t\tvar number = event.target.value;\r\n\t\t\r\n\t\tthis.setState({\r\n\t\t\tsimsToGenerate: number\r\n\t\t});\r\n\t}\r\n\t\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Fragment>\r\n\t\t\t<div className=\"row justify-content-center align-items-end mb-5\">\r\n\t\t\t\t<div className=\"form-group row mb-0\">\r\n\t\t\t\t\t<div className=\"col-auto\">\r\n\t\t\t\t\t\t<label className=\"col-form-label\" htmlFor=\"numberOfSims\">Sims to Generate</label>\r\n\t\t\t\t\t\t<input id=\"numberOfSims\" className=\"form-control\" type=\"number\" min=\"1\" max=\"8\" value={this.state.simsToGenerate} onChange={(event) => this.setNumberOfSims(event)}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"btn btn-primary btn-lg ml-3\" onClick={() => this.generateSims()}>Randomize</button>\r\n\t\t\t</div>\r\n\t\t\t<Sims generatedSims = {this.state.generatedSims}/>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\t\t\t   \r\nexport default GenerateASim;","import React from 'react';\r\n\r\nconst options = (props) => {\r\n\treturn(\r\n\t\t<nav id=\"sidebar\" className={props.show}>\r\n\t\t\t<h3>Advanced Options</h3>\r\n\t\t\t<div className=\"form-check\">\r\n\t\t\t\t<input id=\"genderPrefToggle\" className=\"form-check-input\" type=\"checkbox\" onChange={props.toggleGenderPref}/>\r\n\t\t\t\t<label className=\"form-check-label\" htmlFor=\"genderPrefToggle\">Gender Preference</label>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-check\">\r\n\t\t\t\t<input id=\"secAspirationToggle\" className=\"form-check-input\" type=\"checkbox\" onChange={props.toggleSecAspirations}/>\r\n\t\t\t\t<label className=\"form-check-label\" htmlFor=\"secAspirationToggle\">Secondary Aspirations</label>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-check\">\r\n\t\t\t\t<input id=\"grilledCheeseToggle\" className=\"form-check-input\" type=\"checkbox\" onChange={props.toggleGrilledCheese} disabled={props.disableGCToggle}/>\r\n\t\t\t\t<label className=\"form-check-label\" htmlFor=\"grilledCheeseToggle\">Grilled Cheese Sims</label>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-check\">\r\n\t\t\t\t<input id=\"attractionToggle\" className=\"form-check-input\" type=\"checkbox\" onChange={props.toggleAttraction}/>\r\n\t\t\t\t<label className=\"form-check-label\" htmlFor=\"attractionToggle\">Turn Ons/Turn Offs</label>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\nexport default options;","import React, {Component,Fragment} from 'react';\r\nimport GenerateASim from './containers/GenerateASim/GenerateASim';\r\nimport Options from './components/Options/Options';\r\nimport './scss/custom.css';\r\n\r\nclass App extends Component {\r\n\tstate = {\r\n\t\texpandedAdvancedOptions: false,\r\n\t\tnoGrilledCheese: true,\r\n\t\tnoGenderPref: true,\r\n\t\tnoSecAspirations: true,\r\n\t\tnoAttraction: true\r\n\t}\r\n\r\n\topenAdvancedOptions = () => {\r\n\t\tthis.setState({\r\n\t\t\texpandedAdvancedOptions: !this.state.expandedAdvancedOptions\r\n\t\t});\r\n\t}\r\n\t\r\n\tsetGrilledCheese = () => {\r\n\t\tthis.setState({\r\n\t\t\tnoGrilledCheese: !this.state.noGrilledCheese\r\n\t\t});\r\n\t}\r\n\t\r\n\tsetGenderPref = () => {\r\n\t\tthis.setState({\r\n\t\t\tnoGenderPref: !this.state.noGenderPref\r\n\t\t});\r\n\t}\r\n\t\r\n\tsetSecAspirations = () => {\r\n\t\tthis.setState({\r\n\t\t\tnoSecAspirations: !this.state.noSecAspirations\r\n\t\t});\r\n\t}\r\n\t\r\n\tsetAttraction = () => {\r\n\t\tthis.setState({\r\n\t\t\tnoAttraction: !this.state.noAttraction\r\n\t\t});\r\n\t}\r\n\t\r\n\trender(){\r\n\t\tvar show = this.state.expandedAdvancedOptions ? \"bg-secondary text-white show\" : \"bg-secondary text-white\";\r\n\t\tvar overlay = this.state.expandedAdvancedOptions ? \"show\" : null;\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<Fragment>\r\n\t\t\t\t<Options show={show} toggleGenderPref={(event) => this.setGenderPref()} toggleSecAspirations={(event) => this.setSecAspirations()} toggleGrilledCheese={(event) => this.setGrilledCheese()} disableGCToggle={this.state.noSecAspirations} toggleAttraction={(event) => this.setAttraction()}/>\r\n\t\t\t\t<div id=\"content\">\r\n\t\t\t\t\t<nav id=\"sidedrawerOpen\" className=\"navbar navbar-dark\">\r\n\t\t\t\t\t\t<button className=\"btn btn-secondary ml-auto\" onClick={(event) => this.openAdvancedOptions()}><i className=\"fas fa-cog\"></i></button>\r\n\t\t\t\t\t</nav>\r\n\t\t\t\t\t<header className=\"container text-center\">\r\n\t\t\t\t\t\t<h6>For The Sims 2</h6>\r\n\t\t\t\t\t\t<h1 className=\"mb-3\">Generate-A-Sim</h1>\r\n\t\t\t\t\t\t<p className=\"lead\">Need a whole bunch of random sims for your BACC? Looking for some inspiration for new simmies? Fear not! Here is a random sim generator with some nice additional features to make it easy and quick to generate sims outside the game.</p>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t\t<main className=\"container\">\r\n\t\t\t\t\t\t<GenerateASim noGenderPref={this.state.noGenderPref} noSecAspirations={this.state.noSecAspirations} noGrilledCheese={this.state.noGrilledCheese} noAttraction={this.state.noAttraction}/>\r\n\t\t\t\t\t</main>\r\n\t\t\t\t\t<footer className=\"bg-dark text-white p-5\">\r\n\t\t\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t\t\t<p className=\"mb-0\">Built with Bootstrap and React</p>\r\n\t\t\t\t\t\t\t<p className=\"mb-0\">Created by <a href=\"https://github.com/otterlycoding/\" target=\"_blank\" rel=\"noopener noreferrer\">OtterlyCoding</a> on GitHub <i className=\"fab fa-github\"></i></p>\r\n\t\t\t\t\t\t\t<p className=\"mb-0\">The Sims is a trademark of Electronic Arts</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</footer>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"overlay\" className={overlay} onClick={(event) => this.openAdvancedOptions()}></div>\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}